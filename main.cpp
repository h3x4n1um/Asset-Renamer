#include <json.hpp>
#include <fstream>

using namespace std;
using namespace nlohmann;

void _error(){
    cerr << R"(Error! "versions" not found or not correct format!!!)" << "\n\n";
    system("pause");
}

ifstream input;
ofstream output;
json js;
vector <string> miss_file;

int main(){
    puts("Asset Renamer made by H3x4n1um version 1.2");
    puts(R"(Usage: put this tool and file "versions" in PvZH_AB_Download_Beta\Downloads and run it)");
    puts("Credits: nlohmann for his awesome JSON parser\n");
    /*Read*/
    try{
        input.open("versions");
        input >> js;
        input.close();
        for (auto i : js.at("Entries").get<json>()){
            string file_name = i.at("Name").get<string>();
            int ver = i.at("Version").get<int>();
            if (rename(file_name.c_str(), (file_name + '_' + to_string(ver)).c_str()) != 0) miss_file.push_back(file_name);
        }
    }
    catch (invalid_argument e){
        _error();
        return 1;
    }
    catch (out_of_range e){
        _error();
        return 1;
    }
    if (miss_file.size() > 0){
        output.open("missing_file.log");
        output << "/*****************************************" << endl;
        output << "*This file was generated by Asset Renamer*" << endl;
        output << "*Version: 1.2                            *" << endl;
        output << "*Made by: H3x4n1um                       *" << endl;
        output << "*****************************************/" << endl;
        for (auto i : miss_file) output << i << endl;
        output.close();
    }
    puts("Done! Check missing_file.log (if existed) for missing file\n");
    system("pause");
    return 0;
}
